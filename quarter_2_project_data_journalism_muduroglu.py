# -*- coding: utf-8 -*-
"""Quarter 2 Project - Data Journalism - Muduroglu

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1MwRuugrcomQKU1E0BhEx3v02s7XRNMJB

Sami Muduroglu

Computational Modeling & Simulation

Quarter 2 Project


Welcome! This is my data journalism project! What I decided to do was take NBA player statistics, including 3 point shots, field goal shots, rebounds, assists, steals, blocks, fouls, and total points.

My Goal with this project was to see how the NBA has been changing over the years. How has the playstyle of players changed? Is it getting more or less physical? What are people taking advantage of on the court?

Below this cell is a block of code that I wrote out in order to pull in a data file from the internet. I found this file from Kaggle.com, downloaded it as an excel csv, hosted it on github in my repository, then uploaded the raw file onto here.
"""

import numpy as np, matplotlib.pyplot as plt
import pandas as pd # I used pandas to import the file, because using numpy didn't work as the file had strings.
NBA_file = "https://raw.githubusercontent.com/Samiemud/SamiM/master/NEWREALSEASONSTATS.csv"
nba_data = pd.read_csv(NBA_file, encoding = 'latin-1', delimiter =',')
nba_data

"""After Using Pandas to upload the file into my colab, I turned it into a numpy array in order to then turn it into a "DataFrame""""

nba_data = pd.read_csv(NBA_file, encoding = 'latin-1', delimiter =',').to_numpy() # Turning the pandas data into a numpy array
nba_data

"""I then took all the columns from the original data set (now a numpy array) that I wanted to use in my data, and put it into a data frame."""

from pandas import DataFrame 

Data = {'Year': nba_data[:,0], 'Position': nba_data[:,2], '3Pt Attempt Rate': nba_data[:,3], 'Career Blocks': nba_data[:, 21], 'Field Goals Attempted': nba_data[:, 6], 'Field Goals Made': nba_data[:,5], 'Career Pts': nba_data[:, 24], 'Career Fouls': nba_data[:, 23], 'Attempted 3 Pointers': nba_data[:,9], '3 Pointers Made': nba_data[:,8], 'Assists': nba_data[:,19], '2 Pointers Made': nba_data[:,11], 'Free Throws Made': nba_data[:,15], 'Field Goal Percentage': nba_data[:,7], 'Points':nba_data[:,24]}
# Turning the Numpy array into a pandas dataframe. This way I can have a data set with only the columns I want. 
df = DataFrame(Data, columns=['Year', 'Career Blocks', 'Field Goals Attempted', 'Field Goals Made', 'Career Pts','Career Fouls', 'Attempted 3 Pointers','3 Pointers Made', '2 Pointers Made', 'Free Throws Made', 'Assists', 'Field Goal Percentage', 'Points' ])

df

"""Since there was a lot of N/A stats (for example, the NBA didn't have three pointers until 1980, so all 3 Point Stats beforehand were N/A), I had to clean out those N/A values"""

cleanDF = pd.DataFrame() # I cleaned out all of the data sets/columns because there were a bunch of N/A stats.
cleanDF['Year'] = df['Year'].dropna().astype(int)
cleanDF['Field Goals Made'] = df['Field Goals Made'].dropna().astype(float)
cleanDF['Career Blocks'] = df['Career Blocks'].dropna().astype(float)
cleanDF['Field Goals Attempted'] = df['Field Goals Attempted'].dropna().astype(float)
cleanDF['Career Pts'] = df['Career Pts'].dropna().astype(float)
cleanDF['Career Fouls'] = df['Career Fouls'].dropna().astype(float)
cleanDF['3 Pointers Made'] = df['3 Pointers Made'].dropna().astype(float)
cleanDF['Attempted 3 Pointers'] = df['Attempted 3 Pointers'].dropna().astype(float)
cleanDF['2 Pointers Made'] = df['2 Pointers Made'].dropna().astype(float)
cleanDF['Free Throws Made'] = df['Free Throws Made'].dropna().astype(float)
cleanDF['Assists'] = df['Assists'].dropna().astype(float)
cleanDF['Field Goal Percentage'] = df['Field Goal Percentage'].dropna().astype(float)
cleanDF['Points'] = df['Points'].dropna().astype(float)



cleanDF

"""From there, what I wanted to do with my data was see the total statistics of all the players from each specific NBA Season. These following cells may be hard to understand, but know that for each of these stats (Fouls, 3 Pts, etc.), I summed up all the player stats from a specific year, and made a list of total stats accumulated from each year."""

ThreePtsA = [] 
for i in range(1980, 2018, 1):
  ThreePtsArray = cleanDF[cleanDF['Year'] == i].values # Basically, I loop through every year since 1980, summing up all the stats within that year, and the append that value to a new list.
  TPAColumnSum = ThreePtsArray[:,7].sum() 
  ThreePtsA.append(TPAColumnSum)

ThreePtsA

ThreePtsMade = []
for i in range(1980, 2018, 1):
  ThreePtsArray = cleanDF[cleanDF['Year'] == i].values
  TPAColumnSum = ThreePtsArray[:,6].sum()
  ThreePtsMade.append(TPAColumnSum)

CareerFouls = []
for i in range(1951, 2018, 1):
  CareerFArray = cleanDF[cleanDF['Year'] == i].values
  CFColumnSum = CareerFArray[:, 5].sum()
  CareerFouls.append(CFColumnSum)

FGPtsA = []
for i in range(1980, 2018, 1):
  FGPointArray = cleanDF[cleanDF['Year'] == i].values
  FGColumnSum = FGPointArray[:,3].sum()
  FGPtsA.append(FGColumnSum)

FGMade = []
for i in range(1980, 2018, 1):
  FGPointArray = cleanDF[cleanDF['Year'] == i].values
  FGColumnSum = FGPointArray[:,1].sum()
  FGMade.append(FGColumnSum)

FTMade = []
for i in range(1980, 2018, 1):
  FTPointArray = cleanDF[cleanDF['Year'] == i].values
  FTColumnSum = FTPointArray[:,9].sum()
  FTMade.append(FTColumnSum)

TwoPtsMade = []
for i in range(1980, 2018, 1):
  TwoPointArray = cleanDF[cleanDF['Year'] == i].values
  TwoPtColumnSum = TwoPointArray[:,8].sum()
  TwoPtsMade.append(TwoPtColumnSum)

Assists = []
for i in range(1951, 2018, 1):
  AssistsArray = cleanDF[cleanDF['Year'] == i].values
  AssistColumnSum = AssistsArray[:,10].sum()
  Assists.append(AssistColumnSum)

Blocks = []
for i in range(1980, 2018, 1):
  BlocksArray = cleanDF[cleanDF['Year'] == i].values
  BlockColumnSum = BlocksArray[:,12].sum()
  Blocks.append(BlockColumnSum)

Points = []
for i in range(1951, 2018, 1):
  PointsArray = cleanDF[cleanDF['Year'] == i].values
  PtColumnSum = PointsArray[:,12].sum()
  Points.append(PtColumnSum)

Years = np.arange(1980, 2018, 1)
AllYears = np.arange(1951, 2018, 1)

z = np.polyfit(Years, ThreePtsA, 1) # Finding the Line of Best Fit

x = Years
y = z[0] * x + z[1]

mean = np.sum(ThreePtsA)/len(x) # Calculating R Squared
SS_tot = np.sum((ThreePtsA - mean)**2)
SS_res=np.sum((ThreePtsA-y)**2)

Rsquared3 = 1 - (SS_res/SS_tot)




plt.plot(x,y,label = 'R Squared= {:.2f}'.format(Rsquared3))

plt.plot(Years, ThreePtsA, 'r', label = 'Total 3 Pointers Attempted Per Year')
plt.legend()

ax = plt.gca()
ax.set_title("Total 3 Pointers Attempted Over the Years", size = 15, weight = 'bold')
ax.set_ylabel("3 Pointers Attempted")
ax.set_xlabel("Year")

"""Once I had all this data summed up and easy to use, I started making some graphs. This first graph (Graph Above) shows the total 3 point shots attempted each year since 1980. 

The most interesting part about this graph is the incredibly steep curve and the line of best fit that matches the curve. The "R-Squared" value is a value used to verify how credible or accurate the line of best fit is. The closer the R-Squared value is to 1, the more accurate the line of best fit is. 

Clearly, the NBA has been taking advantage of the 3 point shot, as so many more players have been utilizing it in these past couple of years. 

One thing to note that is interesting is that in the years 1999 and 2011, there is a significant drop in the graph. This is because there was an NBA lockout during part of those seasons, so the player statistics were significantly sliced.
"""

ThreePtConc = []
ThreePtConc
temp = 0
for i in range(38):
  temp = ThreePtsA[i] / FGPtsA[i] # Determining out ratio of three pt attempted to total field goals attempted, by looping through every column and dividing it.
  ThreePtConc.append(temp)
  temp = 0

z = np.polyfit(Years, ThreePtConc, 1)

x = Years
y = z[0] * x + z[1]

mean = np.sum(ThreePtConc)/len(x)
SS_tot = np.sum((ThreePtConc - mean)**2)
SS_res=np.sum((ThreePtConc-y)**2)

Rsquared = 1 - (SS_res/SS_tot)

plt.plot(x,y, 'r', label = 'R Squared= {:.2f}'.format(Rsquared)) # plotting the line of best fit



plt.plot(Years, ThreePtConc, 'b', label = 'Percentage of 3 Pointers')
ax = plt.gca() # This command sets axes lables for the graph
ax.set_title("Percentage of 3 Pointers Attempted Out of Total Field Goals Attempted", size = 15, weight = 'bold')
ax.set_ylabel("Percentage of 3 Pointers")
ax.set_xlabel("Year")
ax.annotate('Steph Curry--Start of His Prime' , xy=(2012, .225),  xycoords='data', # Make annotations  the graph, adding the notes about Steph and MJ
            xytext=(0.8, 0.95), textcoords='axes fraction',
            arrowprops=dict(facecolor='black', shrink=0.05),
            horizontalalignment='right', verticalalignment='top',)

ax.annotate('Era of Michael Jordan & 1996 Bulls' , xy=(1995, .19),  xycoords='data',
            xytext=(0.5, 0.8), textcoords='axes fraction',
            arrowprops=dict(facecolor='black', shrink=0.05),
            horizontalalignment='right', verticalalignment='top',)

plt.legend()

"""To get rid of that lockout outlier in the previous graph, I instead graphed something that measured amount of 3 point shots attempted as a percentage of total shots attempted. (Graph Above)

This new graph also gives a more convincing argument as to how more and more people are taking 3 pointers, because in the last graph, one could argue that players are taking more shots in general, and not just more 3 pointers. Here, this shows that more 3 pointers specifically are being taken.

The R-Squared value for the line of best fit is still >.9, which means that it's an extremely accurate and reliable upward trend.

I also annotated parts of the graph, pointing out when Steph Curry started to become famous in the NBA and the era of MJ, and I thought it was extremely interesting how the graph shows significant changes due to those players being in the NBA. Since those players are scoring tons of points and are amazing 3 point shooters, the rest of the NBA follows suit. 
"""

a = np.polyfit(AllYears, CareerFouls, 1) # Line of Best Fit

b = AllYears
p = a[0] * b + a[1]

mean = np.sum(CareerFouls)/len(b) # Calculating R Squared
SS_tot = np.sum((CareerFouls - mean)**2)
SS_res=np.sum((CareerFouls-p)**2)

RsquaredPF = 1 - (SS_res/SS_tot)


plt.plot(b,p, label = 'R Squared= {:.2f}'.format(RsquaredPF))
plt.scatter(AllYears, CareerFouls, label = 'Total Personal Fouls Called Per Year', color='orange')
ax = plt.gca()
ax.set_title("Total Personal Fouls Over the Years", size = 15, weight = 'bold')
ax.set_ylabel("Personal Fouls")
ax.set_xlabel("Year")
plt.legend()

"""This next graph I made plotted the total personal fouls called from each season, since 1950. 

This graph showed a pretty clear linear trend upwards, with an R Squared of .77. Now, the reason I charted this data is because I wanted to see how the physicality of the game was changing, and wanted to see if there was any relation between the physicality of the game and the number of 3 point shots being taken. 

My hypothesis If there are more 3 pointers being attempted, then NBA players will drive to the basket less and take less shots in the paint, resulting in less physical contact and therefore less fouls. However, this data does not seem to agree with this theory. In fact, there's a pretty clear opposing trend.

My explanation for why this trend exists may be because more fouls are being called, not that the players are actually fouling more or being more physical. The NBA hasn't really gotten any more physical, in fact, there were teams in the past, such as the 1980s-1990s Detroit Pistons, that were known for being extremely violent and physical. However, more fouls are being called than before. This may be a sign that the NBA and referees are punishing physical play more than in the past, and not letting there be any serious physical basketball. This is an interesting idea in and of itself, and paired with the trend of more 3 pointers, we can say that the NBA is becoming less physical overall.
"""

labels = 'Points from 3Pts', 'Points from 2Pts', 'Pts From Free Throws'
componentsOne = [ThreePtsMade[37] * 3, TwoPtsMade[37] * 2, FTMade[37]] # These are the different components of the graph, and it should make a ratio for all of them to add up to 100%.
componentsTwo = [ThreePtsMade[10] * 3, TwoPtsMade[10] * 2, FTMade[10]] # 3 components to the pie chart
explode = (1, 0, 0)  # only "explode" a certain slice, meaning taking it out and show it visually.

fig1, ax1 = plt.subplots()

ax1.pie(componentsOne, explode=explode, labels=labels, autopct='%1.1f%%', shadow=True, startangle=90, center=(0,0), radius = 5) # Making a pie chart
ax1.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle

ax1.pie(componentsTwo, explode=explode, labels=labels, autopct='%1.1f%%', shadow=True, startangle=90, center=(15,0), radius = 5)
ax1.axis('equal')

ax = plt.gca()
ax.set_title('NBA Distribution of Point-Scoring Methods: 2017 (Left) vs. 1990 (Right)', size = 14, weight = 'bold')
plt.show()

plt.rcParams['figure.figsize'] = (10,10) # This changes the parameters and sizes of all the charts in the colab, making them much bigger and easier to read.

"""These Pie Charts I made are just another way to visualize the different in scoring types and how it has changed. In 1990, it's clear that 2 point shots were the primary form of scoring, as it accounted for 73.6% of the total points scored. In 2017, that drastically changed, as now only 55% of the points scored comes from 2 point shots, and almost 28% of points comes from 3 pointers, which is pretty remarkable if you think about it, because making a 3 pointer is much  more difficult than making anything within the arc.

"""

FGPercentage = []
temp = 0
for i in range(38): # Same process as finding the ratio of 3 pointers attempted to total field goals attempted. 
  temp = FGMade[i] / FGPtsA [i]
  FGPercentage.append(temp)
  temp = 0

a = np.polyfit(Years, FGPercentage, 1)

b = Years
p = a[0] * b + a[1]

mean = np.sum(FGPercentage)/len(b)
SS_tot = np.sum((FGPercentage - mean)**2)
SS_res=np.sum((FGPercentage - p)**2)

plt.plot(b, p, label = 'R Squared= {:.2f}'.format(RsquaredPF))

RsquaredPF = 1 - (SS_res/SS_tot)

plt.plot(Years, FGPercentage, 'p', label = 'Field Goal Percentage', color='red')
ax = plt.gca()
ax.set_title('Average Field Goal Percentage of NBA Players Since 1980', size = 14, weight = 'bold')
ax.set_ylabel('Field Goal Percentage')
ax.set_xlabel('Year')

plt.legend()

"""Because the number of 3 pointers being shot was increasing, I wanted to see how that affected overall field goal percentage and the efficiency of shooters. As I probably would've guessed, the graph above shows a clear decline in field goal percentage since 1980, with an R squared = .64. This isn't as accurate as some of the other graphs, but is still high enough that we can draw usable assumptions from the line of best fit 

I thought it was extremely interesting that field goal percentage has gone down, but it honestly wasn't surprising considering, as I explained before, taking a 3 point shot is much harder than any 2 point shot just due to its distance from the basket.

NOTE: I graphed this data a bit differently than one would assume. I couldn't just gotten the actual field goal percentages of each player and averaged them for each year, but the problem with that would be that a player that shoots 3 shots would have as much weight as a player who shoots 300 shots, and I would rather have the data scaled to have more active players contribute to the average more. The way I did this was instead sum up the total field goals made from each year, and have a list from 1980-now, and then do the same with total field goals attempted, and then divide the two to get the average for each year.

"""

plt.hist(FGPercentage, len(Years), color='turquoise') # Making a histogram of the frequency of seasons having certain average FG percentages.
ax = plt.gca()
ax.set_title('Histogram Displaying Frequency of Seasons Having certain Average Field Goal Percentages, Since 1980', size = 14, weight = 'bold')
ax.set_ylabel('Number of Seasons')
ax.set_xlabel('Average Field Goal Percentage')

"""Plotting the Average Season Field Goal Percentage over time led me to think about how the average field goal percentage has been contained in the larger picture of the NBA History. Using the histogram above, I wanted to visualize what is the most likely field goal percentage for all players in a season, and what it really can get capped at. From the histogram, we see that there has rarely been any seasons, only 1-2, that have hit 49-50% field goal percentage for all the players.

This is revealing about the game of basketball itself, and raises questions as to why it's hard for players to get over 50% efficiency in their shots in a season. Is it the volume of shots being taken over time? Is it gametime scenarios that affects this? Or is it just something players can never really go above? It seems like the more a player shoots, the more their efficiency averages out to 45-50%, almost like someone flipping a coin 100 times instead of 10 times.
"""

a = np.polyfit(AllYears, Assists, 1)

b = AllYears
p = a[0] * b + a[1]

mean = np.sum(Assists)/len(b)
SS_tot = np.sum((Assists - mean)**2)
SS_res=np.sum((Assists - p)**2)

plt.plot(b, p, label = 'R Squared= {:.2f}'.format(RsquaredPF))

RsquaredPF = 1 - (SS_res/SS_tot)

ax = plt.gca()
ax.set_title('Total Assists From Players Since 1950', size = 14, weight = 'bold')
ax.set_ylabel('Assists')
ax.set_xlabel('Year')
ax.annotate('John Stockton Drafted in 1984' , xy=(1987, 52000),  xycoords='data',
            xytext=(0.5, 0.8), textcoords='axes fraction',
            arrowprops=dict(facecolor='black', shrink=0.05),
            horizontalalignment='right', verticalalignment='top',)


plt.plot(AllYears, Assists, label = 'Total Annual Assists', color='green')

plt.legend()

"""Another part of the game I wanted to look at was assists. The reason I wanted to see the change in total assists measured was because assists is a good way to analyze the pace of the game. When a team tends to have more assists, that means they pass the ball more or there are more shots being taken, and players will shoot quickly after receiving the ball. 

This data, with a solid R Squared of .8, shows how over time, players and teams have tended to rack up more and more assist statistics. This is a good indicator of the game becoming more fast-paced. Instead of the slow, "in-the-post" playstyle of the 1960s,70s,and 80s with Wilt Chamberlain and Kareem Abdul-Jabbar, players opt for quicker scoring methods with passing through your team and shooting quickly after you get the ball. 

The game becoming more fast-paced because of assists also seems to align with more 3 pointers being shot, because most 3 pointers can only come from open assists as very few players are talented enough to make space for themselves to shoot a 3 pointer. Since the 3 point shot is becoming more valuable, people are assisting more because a "catch-and-shoot" is the best way to shoot a 3, unless you're Steph Curry.

One final interesting thing I wanted to annotate into the graph was when John Stockton was drafted. John Stockton was known for his assisting statistics and being an amazing point guard, and I think it was interesting that, as he started playing in the NBA, the number of assists went up. This, along with the annotations I made to the 3 point percentage graph, makes an interesting argument to how even individual players can have an effect on the overall playstyle of the NBA. 
"""

a = np.polyfit(AllYears, Points, 1)

b = AllYears
p = a[0] * b + a[1]

mean = np.sum(Points)/len(b)
SS_tot = np.sum((Points - mean)**2)
SS_res=np.sum((Points - p)**2)

plt.plot(b, p, label = 'R Squared= {:.2f}'.format(RsquaredPF))

RsquaredPF = 1 - (SS_res/SS_tot)

ax = plt.gca()
ax.set_title('Total Points Scored From Players Since 1950', size = 14, weight = 'bold')
ax.set_ylabel('Points')
ax.set_xlabel('Year')
plt.plot(AllYears, Points, 'p', label = 'Total Points Scored', color='purple')

plt.legend()

"""As the final data set that I wanted to look at, I graphed the change in total points scored per season since 1950. This was the final part of my analysis to see what effects 3 pointers, assists, and decreasing FG% had on how many points were being scored each season. 

As expected, since more players started taking more 3's and assisting more, even with a decrease in field goal percentage, the volume of points being scored increased immensely, with an R Squared of .85. This final set of data then concludes that where the NBA is going with it's playstyle is the right direction. More 3 pointers being shot in basketball strongly correlates with more points being scored overall, regardless of changes in the percentage of shots made. 

Looking over all of my data and seeing what was done, I don't think there is any hard conclusion or evidence to make a bold claim, but the data does show the NBA seriously changing over the past years. The game has punished more physical play and rewarded the "finesse" of the 3 point shot and fast-paced team play, which in turn makes the game faster and more exciting. 

What was most interesting in my opinion was that many people think that the 3 point shot really started to become popular only after Stephen Curry became famous, but in reality, according to these graphs, the 3 point shot has been trending upwards since the 1980s, long before Steph or any of the new shooters in the league.

"""